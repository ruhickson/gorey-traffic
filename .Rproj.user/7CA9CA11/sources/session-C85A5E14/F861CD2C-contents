---
title: "Gorey Traffic Blog"
author: "Ru Hickson"
date: "2022-11-01"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(gifski)
library(gganimate)
library(tidyr)
library(transformr)
library(ggthemes)
library(dplyr)
library(ggplot2)
library(gganimate)
library(lubridate)
library(hms)
load("dataset.Rdata")
```

## Background

Data sourced at [data.gov.ie](https://data.gov.ie/dataset/gorey-traffic-data)

Gorey is pretty close to my hometown of Arklow and, for anyone who's been through it, you'll know the town has a pretty notorious history as a traffic bottleneck (not as bad as Enniscorthy, but still...). So when I found a large dataset on the inexhaustible data.gov.ie for Gorey Traffic over the past 9 months or so, I felt compelled to work with it.

```{r}
summary(dataset)

str(dataset)

head(dataset)
```

## Managing the Data

There's a wee bit of redundant data here we don't particularly need. In fact, everything from the first 6 fields only has a single value. What I want to look at is the volume of Eastbound and Westbound traffic throughout the year, and really throughout the day.

```{r, echo=TRUE}
# create workable subset
dataset_mini <- dataset[,c("Date","Time","Direction_West","Direction_East")]

```

I'm also interested in rounding the data to the nearest 15 minutes. Just a casual browse through the Time field shows there's no particularly consistent pattern like "top of the minute". This step isn't strictly necessary, but it buckets the data nicely. For convenience, I'm also going to create a timestamp field called datetime 

```{r, echo=TRUE}

# handle datetime and round to nearest 15 minutes
dataset_mini$Datetime <- as.POSIXct(as.character(paste(dataset_mini$Date, dataset_mini$Time)))
dataset_mini$Datetime <- round_date(dataset_mini$Datetime, "15 minutes")
dataset_mini$Time <- as_hms(dataset_mini$Datetime)

# view new dataset
head(dataset_mini)
```

Often, the output of a visualisation is less interesting than the data manipulation techniques. Lubridate is an incredible library that genuinely makes date conversion simple. As a "data guy", and for any other data people out there, you'll know that manipulating time data is the single most common pain in the whole of analytics. Being able to convert one date to another so easily is a godsend. And the solution is so simple, without needing to know explicit format names like ISO8601. You just tell the function what the date format looks like now, and what you want it to look like after execution. If you're lazy, you can even get it to guess what the starting format is. This sort of feature is sorely missing from any SQL system I've ever used.

## Plotting Time of Day

```{r, echo=TRUE}
# Get start and end dates for dynamic titling
stdate <- min(dataset_mini$Date)
endate <- max(dataset_mini$Date)

# Create time-series dataset
timedata <- dataset_mini %>%
  group_by(Time) %>%
  summarise(W = sum(Direction_West), E = -sum(Direction_East)) %>% 
  as.data.frame()

# Reshape data from wide to long
timedata1 <- timedata %>% gather(., key=Direction, value=no_of_cars, c("W","E"))
timedata1$Time <- as_hms(timedata1$Time)

# Plot time-series
ggplot(timedata1) +
  geom_col(aes(x=Time, y=-no_of_cars, fill=Direction)) +
  theme_tufte() +
  labs(title = paste0("Gorey Road Traffic by Time of Day (",stdate," to ",endate,")")) +
  xlab("Time of Day") +
  ylab("<- West          East ->") +
  coord_flip() +
  scale_fill_manual(values = c("purple","gold"))
```

I changed from the default ggplot colours to the Wexford county colours (which are pretty nice), and it's clear to see traffic is definitely heavier going East than West. Seems like most people that go East on Gorey's Main Street don't want to go back! In fact, if you're travelling East on Gorey's Main Street, it means you're on the way to Dublin. There are also two major arteries at the East end of Main Street, and in some return cases, it's simpler to loop back West via a different road than to go back down the main street. As far as I'm aware, there's no Shapefile for Gorey, but as soon as there is one available, I'll happily visualize that logic. For now, you can see the general flow on Google Maps.

Speaking of Flow, let's take a look at the East vs West flow in Gorey:

```{r, echo=TRUE}
# Calculate E-W Flow throughout the day
timedata$Flow <- timedata$W + timedata$E

# Create Flow time-series dataset
ggplot(timedata) +
  geom_text(aes(x=Time, y=-Flow, size = -Flow), label = ">") +
  geom_col(aes(x=Time, y=-Flow, fill=-Flow), alpha=.4) +
  theme_tufte() +
  labs(title = paste0("Gorey Road Traffic Flow by Time the Day (",stdate," to ",endate,")")) +
  xlab("Time of Day") +
  ylab("<- West          East ->") +
  coord_flip() +
  theme(legend.position = "none")
```

Wow! So a pretty heavy Eastbound bias indeed - there's no point in the day where Westbound traffic is actually heavier.

But does this pattern hold true for Day as well as time? Let's see.

## Plotting Dates

```{r, echo=TRUE}
# create time-series dataset
datedata <- dataset_mini %>%
  group_by(Date) %>%
  summarise(W = sum(Direction_West), E = -sum(Direction_East)) %>% 
  as.data.frame()

# reshape data from wide to long
datedata1 <- datedata %>% gather(., key=Direction, value=no_of_cars, c("W","E"))
datedata1$Date <- as_date(datedata1$Date)
str(datedata1)

# plot time-series
ggplot(datedata1) +
  geom_col(aes(x=Date, y=-no_of_cars, fill=Direction)) +
  theme_tufte() +
  labs(title = paste0("Gorey Road Traffic by Date (",stdate," to ",endate,")")) +
  xlab("Date") +
  ylab("<- West          East ->") +
  scale_fill_manual(values = c("purple","gold"))
```

Looks pretty similar as well. It's clear the average Eastbound traffic is ~7500 per day, while Eastbound barely touches ~5000.

There are some interesting anomalies in the data.

The large spike for the week beginning 6th March is likely down to the week Ireland began receiving large numbers of Ukranian refugees as a result of the ongoing war [Source](https://www.google.com/search?q=ireland&biw=1490&bih=746&sxsrf=ALiCzsY80uvODo64cg74lfBJHi0BQl_qsw%3A1667405656824&source=lnt&tbs=cdr%3A1%2Ccd_min%3A3%2F1%2F2022%2Ccd_max%3A3%2F6%2F2022&tbm=nws). Many of these refugees would have come in from Rosslare and travelled up to Dublin. Coincidentally, this is also the date Ireland dropped its requirement for tourists to have a Covid vaccination cerification to enter the country.

There is no explanation given for the 8-day gap in April (13-20), so it's possible the sensors were down for maintenance or some other reason.

The large spikes on the 26th and 27th of June are most likely due to people travelling for [Wexford Pride](https://linktr.ee/wexfordpride) that weekend.

And the miniscule value on the 31st of July is as a result of the [Gorey Market House Festival](https://lovegorey.ie/event/2022-gorey-market-house-festival), where the main street was closed while pedestrians flooded the streets and enjoyed the summer weather.

## Thanks

If you liked reading this, please give me a follow on [LinkedIn](http://linkedin.com/in/ruhickson) or [Twitter](https://twitter.com/ruhickson) for more content!